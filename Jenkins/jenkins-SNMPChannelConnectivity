// Functions

def archiveArtifacts(pattern) {
    step([$class: 'ArtifactArchiver', artifacts: pattern, fingerprint: true, onlyIfSuccessful: false])
}


// Main Pipeline

pipeline {
    agent { node { label "${TARGET_STAND}"} }

    stages {
        stage('Prepare tests') {
            steps {
                script {
                    echo "----------------------------------------"
                    echo "---> TARGET STAND: ${TARGET_STAND} "
                    echo "----------------------------------------"
      	        }
      	    }
        }
        stage('Install Dependencies') {
            steps {
                script {
                    echo "----------------------------------------"
                    echo "         Installing Dependencies"
                    echo "----------------------------------------"
                    sh "sh utilities/requirements.txt"
                }
            }
        }
        stage('Channel Testing') {
            steps {
                script {
                    echo "----------------------------------------"
                    echo "Starting Channel Testing"
                    echo "----------------------------------------"
                    sh "mkdir -p artifacts"

                    def localIP = "'${params.LOCAL_IP_ADDRESS}'"
                    def remoteIP = "'${params.REMOTE_IP_ADDRESS}'"

                    def bandwidth = params.BANDWIDTH
                    def country = params.COUNTRY

                    echo $localIP
                    echo $remoteIP
                    echo $bandwidth
                    echo $country

                    if ( Radio == "Radio1" ){
                        echo "-------- Started Channel Connectivity Test for Radio 1 --------- "
                        sh "pytest -v -s testCases/test_channelTest.py::test_channelconnectivity 2>&1 "
                    else{
                        echo "-------- Started Channel Connectivity Test for Radio 2 --------- "
                        sh "pytest -v -s testCases/test_channelTest.py::test_channelconnectivity 2>&1 "
                    }
                    //echo ${workspace}
                    //archiveArtifacts('artifacts/**/*')
                    }
                }
            }
        }
    }
    post {
        always {
            echo "-----------------------------------------"
            echo 'Script Done!'
            echo "-----------------------------------------"
        }

        success {
            echo "-----------------------------------------"
            echo 'Script Success'
            echo "-----------------------------------------"
        }

        failure {
            echo "-----------------------------------------"
            echo 'Script Failure'
            echo "-----------------------------------------"
        }
    }
}