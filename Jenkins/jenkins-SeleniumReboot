// Functions

def archiveArtifacts(pattern) {
    step([$class: 'ArtifactArchiver', artifacts: pattern, fingerprint: true, onlyIfSuccessful: false])
}


// Main Pipeline

pipeline {
    agent { node { label "${TARGET_STAND}"} }

    stages {
        stage('Prepare tests') {
            steps {
                script {
                    echo "----------------------------------------"
                    echo "--- TARGET STAND: ${TARGET_STAND}"
                    echo "----------------------------------------"
      	        }
      	    }
        }
        stage('Install Dependencies') {
            steps {
                script {
                    echo "----------------------------------------"
                    echo "Installing Dependencies"
                    echo "----------------------------------------"
                    sh "sh utilities/requirements.txt"
                }
            }
        }
        stage('Access and Login') {
            steps {
                script {
                    def localIP = params['Local IP Address']
                    def remoteIP = params['Remote IP Address']

                    echo "Local IP Address: ${localIP}"
                    echo "Remote IP Address: ${remoteIP}"

                    sh "pytest -v -s testCases/test_login.py::test_HomePageTitle --local-ip '$localIP' --remote-ip '$remoteIP'"
                    }
                }
        }
        stage('Reboot') {
            steps {
                script {
                    sh "mkdir -p artifacts"

                    def localIP = params['Local IP Address']
                    def remoteIP = params['Remote IP Address']

                    echo "Local IP Address: ${localIP}"
                    echo "Remote IP Address: ${remoteIP}"

                    for (int i = 1; i <= REBOOT_COUNT.toInteger() ; i++) {
                        sh "pytest -v -s testCases/test_reboot.py::test_Reboot --local-ip '$localIP' --remote-ip '$remoteIP' 2>&1 | tee -a ${workspace}/artifacts/reboot-radio.log"
                        // sh "echo Iteration : ${i} 2>&1 | tee -a ${workspace}/SerialLogs_AP_${i}.log"
                    }
                    archiveArtifacts('artifacts/**/*')
                    archiveArtifacts('SerialLogs_Device.log')
                }
            }
        }
    }
    post {
        always {
            echo "-----------------------------------------"
            echo 'Script Done!'
            echo "-----------------------------------------"
        }

        success {
            echo "-----------------------------------------"
            echo 'Script Success'
            echo "-----------------------------------------"
        }

        failure {
            echo "-----------------------------------------"
            echo 'Script Failure'
            echo "-----------------------------------------"
        }
    }
}